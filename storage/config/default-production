##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	#listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name ilhanet.com;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
server {
    # Port that the web server will listen on.
        listen 80;
        listen 443 ssl;
        ssl on;
	#ssl_certificate /etc/nginx/ssl/fd32675451e107f6.crt;
	ssl_certificate /etc/nginx/ssl/fd32675451e107f6.crt.chained.crt;
	ssl_certificate_key /etc/nginx/ssl/delivery.ilhanet.com.key;
	#ssl_certificate /etc/apache2/ssl/apache.crt;
	#ssl_certificate_key /etc/apache2/ssl/apache.key;

    # Host that will serve this project.
    server_name delivery.ilhanet.com;

    # Useful logs for debug.
    rewrite_log on;

    # The location of our projects public directory.
    root /home/ubuntu/laravel511/public;

    # Point index to the Laravel front controller.
    index index.php;

    location / {
        # URLs to attempt, including pretty ones.
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Remove trailing slash to please routing system.
    if (!-d $request_filename) {
        rewrite ^/(.+)/$ /$1 permanent;
    }

    # PHP FPM configuration.
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # We don't need .ht files with nginx.
    location ~ /\.ht {
            deny all;
    }
    # Set header expirations on per-project basis location ~* \.(?:ico|css|js|jpe?g|JPG|png|svg|woff)$ {
    #        expires 365d;
    #}
}

server {
    # Port that the web server will listen on.
        listen 80;
        listen 443 ssl;
        ssl on;
    ssl_certificate /home/ubuntu/ssl/delivery24horas.com/a070464ad926118f.crt.chained.crt;
    #ssl_certificate_key /home/ubuntu/ssl/delivery24horas.com/nginx.key;
    #ssl_certificate /etc/nginx/ssl/fd32675451e107f6.crt.chained.crt;
    ssl_certificate_key /etc/nginx/ssl/delivery.ilhanet.com.key;

    # Host that will serve this project.
    server_name delivery24horas.com;

    # Useful logs for debug.
    rewrite_log on;

    # The location of our projects public directory.
    root /home/ubuntu/delivery24horas/public;

    # Point index to the Laravel front controller.
    index index.php;

    location / {
        # URLs to attempt, including pretty ones.
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Remove trailing slash to please routing system.
    if (!-d $request_filename) {
        rewrite ^/(.+)/$ /$1 permanent;
    }

    # PHP FPM configuration.
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # We don't need .ht files with nginx.
    location ~ /\.ht {
            deny all;
    }
    # Set header expirations on per-project basis location ~* \.(?:ico|css|js|jpe?g|JPG|png|svg|woff)$ {
    #        expires 365d;
    #}
}

server {
    # Port that the web server will listen on.
        listen 80;
        listen 443 ssl;
        ssl on;

        ssl_certificate /home/ubuntu/ssl/delivery24horas.com/a070464ad926118f.crt.chained.crt;
        #ssl_certificate_key /home/ubuntu/ssl/delivery24horas/nginx.key;
        #ssl_certificate /etc/nginx/ssl/fd32675451e107f6.crt.chained.crt;
        ssl_certificate_key /etc/nginx/ssl/delivery.ilhanet.com.key;

    # Host that will serve this project.
    server_name www.delivery24horas.com;

    # Useful logs for debug.
    rewrite_log on;

    # The location of our projects public directory.
    root /home/ubuntu/delivery24horas/public;

    # Point index to the Laravel front controller.
    index index.php;

    location / {
        # URLs to attempt, including pretty ones.
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Remove trailing slash to please routing system.
    if (!-d $request_filename) {
        rewrite ^/(.+)/$ /$1 permanent;
    }

    # PHP FPM configuration.
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # We don't need .ht files with nginx.
    location ~ /\.ht {
            deny all;
    }
    # Set header expirations on per-project basis location ~* \.(?:ico|css|js|jpe?g|JPG|png|svg|woff)$ {
    #        expires 365d;
    #}
}
server {
    # Port that the web server will listen on.
        listen 80;
        listen 443 ssl;
        ssl on;

        ssl_certificate /home/ubuntu/ssl/delivery24horas.com/a070464ad926118f.crt.chained.crt;
        #ssl_certificate_key /home/ubuntu/ssl/delivery24horas/nginx.key;
        #ssl_certificate /etc/nginx/ssl/fd32675451e107f6.crt.chained.crt;
        ssl_certificate_key /etc/nginx/ssl/delivery.ilhanet.com.key;

    # Host that will serve this project.
    server_name api.delivery24horas.com;

    # Useful logs for debug.
    rewrite_log on;

    # The location of our projects public directory.
    root /home/ubuntu/laravel-delivery24horas-api/public;

    # Point index to the Laravel front controller.
    index index.php;

    location / {
        # URLs to attempt, including pretty ones.
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Remove trailing slash to please routing system.
    if (!-d $request_filename) {
        rewrite ^/(.+)/$ /$1 permanent;
    }

    # PHP FPM configuration.
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # We don't need .ht files with nginx.
    location ~ /\.ht {
            deny all;
    }
    # Set header expirations on per-project basis location ~* \.(?:ico|css|js|jpe?g|JPG|png|svg|woff)$ {
    #        expires 365d;
    #}
}
server {
    # Port that the web server will listen on.
        listen 80;
        listen 443 ssl;
        ssl on;

        ssl_certificate /home/ubuntu/ssl/delivery24horas.com/a070464ad926118f.crt.chained.crt;
        #ssl_certificate_key /home/ubuntu/ssl/delivery24horas/nginx.key;
        #ssl_certificate /etc/nginx/ssl/fd32675451e107f6.crt.chained.crt;
        ssl_certificate_key /etc/nginx/ssl/delivery.ilhanet.com.key;

    # Host that will serve this project.
    server_name ionic.delivery24horas.com;

    # Useful logs for debug.
    rewrite_log on;

    gzip            on;
    gzip_min_length 1000;
    #gzip_proxied    expired no-cache no-store private auth;
    gzip_proxied    any;
    gzip_types      text/plain application/xml application/javascript text/css;

    # CSS and Javascript
    location ~* \.(?:css|js)$ {
      expires 2w;
      access_log off;
      add_header Cache-Control "public";
    }

    # The location of our projects public directory.
    root /home/ubuntu/ionic-delivery24horas/www;

    # Point index to the Laravel front controller.
    index index.html;

    # Remove trailing slash to please routing system.
    if (!-d $request_filename) {
        rewrite ^/(.+)/$ /$1 permanent;
    }

    # We don't need .ht files with nginx.
    location ~ /\.ht {
            deny all;
    }
    # Set header expirations on per-project basis location ~* \.(?:ico|css|js|jpe?g|JPG|png|svg|woff)$ {
    #        expires 365d;
    #}
}
server {
    # Port that the web server will listen on.
        listen 80;
        listen 443 ssl;
        ssl on;

        ssl_certificate /home/ubuntu/ssl/delivery24horas.com/a070464ad926118f.crt.chained.crt;
        #ssl_certificate_key /home/ubuntu/ssl/delivery24horas/nginx.key;
        #ssl_certificate /etc/nginx/ssl/fd32675451e107f6.crt.chained.crt;
        ssl_certificate_key /etc/nginx/ssl/delivery.ilhanet.com.key;

    # Host that will serve this project.
    server_name ionic.ilhanet.com;

    # Useful logs for debug.
    rewrite_log on;

    gzip            on;
    gzip_min_length 1000;
    #gzip_proxied    expired no-cache no-store private auth;
    gzip_proxied    any;
    gzip_types      text/plain application/xml application/javascript text/css;

    # CSS and Javascript
    location ~* \.(?:css|js)$ {
      expires 2w;
      access_log off;
      add_header Cache-Control "public";
    }

    # The location of our projects public directory.
    root /home/ubuntu/ionic-delivery24horas/www;

    # Point index to the Laravel front controller.
    index index.html;

    # Remove trailing slash to please routing system.
    if (!-d $request_filename) {
        rewrite ^/(.+)/$ /$1 permanent;
    }

    # We don't need .ht files with nginx.
    location ~ /\.ht {
            deny all;
    }
    # Set header expirations on per-project basis location ~* \.(?:ico|css|js|jpe?g|JPG|png|svg|woff)$ {
    #        expires 365d;
    #}
}

server {
    # Port that the web server will listen on.
        listen 80;
        listen 443 ssl;
        ssl on;

	ssl_certificate /etc/nginx/ssl/fd32675451e107f6.crt.chained.crt;
    ssl_certificate_key /etc/nginx/ssl/delivery.ilhanet.com.key;
	#ssl_certificate /etc/apache2/ssl/apache.crt;
	#ssl_certificate_key /etc/apache2/ssl/apache.key;

    # Host that will serve this project.
    server_name laravel.ilhanet.com;

    # set client body size to 2M #
    client_max_body_size 3M;

    # Useful logs for debug.
    rewrite_log on;

    # The location of our projects public directory.
    root /home/ubuntu/laravel511/public;

    # Point index to the Laravel front controller.
    index index.php;

    location / {
        # URLs to attempt, including pretty ones.
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Remove trailing slash to please routing system.
    if (!-d $request_filename) {
        rewrite ^/(.+)/$ /$1 permanent;
    }

    # PHP FPM configuration.
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # We don't need .ht files with nginx.
    location ~ /\.ht {
            deny all;
    }

}

server {
    # Port that the web server will listen on.
        listen 80;
        listen 443 ssl;
        ssl on;

	ssl_certificate /etc/nginx/ssl/fd32675451e107f6.crt.chained.crt;
    ssl_certificate_key /etc/nginx/ssl/delivery.ilhanet.com.key;
	#ssl_certificate /etc/apache2/ssl/apache.crt;
	#ssl_certificate_key /etc/apache2/ssl/apache.key;

    # Host that will serve this project.
    server_name relatorios.ilhanet.com;

    # set client body size to 2M #
    client_max_body_size 3M;

    # Useful logs for debug.
    rewrite_log on;

    # The location of our projects public directory.
    root /home/ubuntu/laravel-relatorios-delivery/public;

    # Point index to the Laravel front controller.
    index index.php;

    location / {
        # URLs to attempt, including pretty ones.
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Remove trailing slash to please routing system.
    if (!-d $request_filename) {
        rewrite ^/(.+)/$ /$1 permanent;
    }

    # PHP FPM configuration.
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # We don't need .ht files with nginx.
    location ~ /\.ht {
            deny all;
    }

}

server {
    # Port that the web server will listen on.
        listen 80;
        listen 443 ssl;
        ssl on;
	    ssl_certificate /etc/nginx/ssl/fd32675451e107f6.crt.chained.crt;
    	ssl_certificate_key /etc/nginx/ssl/delivery.ilhanet.com.key;

    # Host that will serve this project.
    server_name pma.ilhanet.com;

    # set client body size to 2M #
    client_max_body_size 3M;

    # Useful logs for debug.
    rewrite_log on;

    # The location of our projects public directory.
    #root /var/www/pma443;
    root /home/ubuntu/phpMyAdmin-4.5.0-beta1-all-languages;

    # Point index to the Laravel front controller.
    index index.php;

    location / {
        # URLs to attempt, including pretty ones.
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP FPM configuration.
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # We don't need .ht files with nginx.
    location ~ /\.ht {
            deny all;
    }

}

server {
    # Port that the web server will listen on.
        listen 80;
        listen 443 ssl;
        #ssl on;
	    #ssl_certificate /etc/nginx/ssl/fd32675451e107f6.crt.chained.crt;
    	#ssl_certificate_key /etc/nginx/ssl/delivery.ilhanet.com.key;

    # Host that will serve this project.
    server_name programadiscreto.ilhanet.com;

    # set client body size to 2M #
    client_max_body_size 3M;

    # Useful logs for debug.
    rewrite_log on;

    # The location of our projects public directory.
    root /home/ubuntu/programa-discreto/public;

    # Point index to the Laravel front controller.
    index index.php;

    location / {
        # URLs to attempt, including pretty ones.
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP FPM configuration.
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # We don't need .ht files with nginx.
    location ~ /\.ht {
            deny all;
    }

}